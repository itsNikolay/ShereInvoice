// Generated by CoffeeScript 1.9.0
(function() {
  var __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __hasProp = {}.hasOwnProperty;

  define(['jquery', 'underscore', 'backbone', 'models/invoice', 'text!templates/form.html'], function($, _, Backbone, Invoice, formTemplate) {
    var InvoiceFormView;
    InvoiceFormView = (function(_super) {
      __extends(InvoiceFormView, _super);

      function InvoiceFormView() {
        return InvoiceFormView.__super__.constructor.apply(this, arguments);
      }

      InvoiceFormView.prototype.el = '#container';

      InvoiceFormView.prototype.template = _.template(formTemplate);

      InvoiceFormView.prototype.model = new Invoice;

      InvoiceFormView.prototype.events = {
        'submit form': 'submit'
      };

      InvoiceFormView.prototype.render = function() {
        return this.$el.html(this.template());
      };

      InvoiceFormView.prototype.submit = function(e) {
        var array, data, invoice, _i, _len;
        e.preventDefault();
        array = $('form').serializeArray();
        data = {};
        for (_i = 0, _len = array.length; _i < _len; _i++) {
          invoice = array[_i];
          data[invoice['name']] = invoice['value'];
        }
        console.log(data);
        return console.log(this.model.save(data));
      };

      return InvoiceFormView;

    })(Backbone.View);
    return InvoiceFormView;
  });

}).call(this);
